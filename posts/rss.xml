<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>henglinli.github.io</title>
    <description>henglinli.github.io</description>
    <link>https://henglinli.github.io</link>
    <pubDate>2013-12-05</pubDate>
    <item>
      <title>try Concurrency Kit and TBB</title>
      <link>https://henglinli.github.io/try/try-concurrency-kit-and-tbb</link>
      <pubDate>2013-12-05</pubDate>
      <description>&lt;h3 id="toc_0"&gt;Why&lt;/h3&gt;

&lt;p&gt;Server&#x7AEF;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x5BB9;&#x5668;&#xFF0C;&#x6765;&#x5B58;&#x653E;&#x5168;&#x90E8;Client&#x7684;&#x5F53;&#x524D;&#x72B6;&#x6001;&#xFF0C;&#x4EE5;&#x4FBF;&#x80FD;&#x505A;&#x5230;C2C&#x4EA4;&#x4E92;&#xFF1B;
&#x4E5F;&#x9700;&#x8981;&#x591A;&#x4E2A;&#x5168;&#x5C40;&#x5BB9;&#x5668;&#x6765;&#x4FDD;&#x6301;Server&#x7684;&#x72B6;&#x6001;&#x4FE1;&#x606F;&#xFF0C;&#x4EE5;&#x4FBF;&#x80FD;&#x505A;&#x5230;C2S&#x4EA4;&#x4E92;&#x3002;&#x591A;&#x7EBF;&#x7A0B;&#x4E0B;&#xFF0C;
&#x4F7F;&#x7528;&#x5E38;&#x89C4;&#x5BB9;&#x5668;(unorderd_map&#x7B49;)&#x5F97;&#x4E0A;&#x9501;&#xFF0C;&#x8FD9;&#x6837;Server&#x5C31;&#x6162;&#x4E0B;&#x6765;&#x4E86;&#x3002;&lt;/p&gt;

&lt;h2 id="toc_1"&gt;How&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://concurrencykit.org/" title="Concurrency Kit"&gt;Concurrency Kit&lt;/a&gt;&#x63D0;&#x4F9B;&#x591A;&#x79CD;&#x65E0;&#x9501;(lockfree)&#x5BB9;&#x5668;&#xFF0C;
&lt;a href="http://threadingbuildingblocks.org" title="Intel&#xAE; Threading Building Blocks (Intel&#xAE; TBB)"&gt;Intel&#xAE; Threading Building Blocks (Intel&#xAE; TBB)&lt;/a&gt;&#x4E5F;&#x63D0;&#x4F9B;&#x5E76;&#x53D1;&#x7684;&#x5BB9;&#x5668;&#xFF0C;
&lt;a href="http://threadingbuildingblocks.org" title="Intel&#xAE; Threading Building Blocks (Intel&#xAE; TBB)"&gt;Intel&#xAE; TBB&lt;/a&gt;&#x7684;&#x5E76;&#x53D1;&#x5BB9;&#x5668;&#x4E5F;&#x4E0D;&#x662F;&#x65E0;&#x9501;&#x5BB9;&#x5668;&#xFF0C;&#x7406;&#x8BBA;&#x4E0A;&#x8981;&#x6BD4;&lt;a href="http://concurrencykit.org/" title="Concurrency Kit"&gt;Concurrency Kit&lt;/a&gt;&#x6162;&#x3002;
&#x91C7;&#x7528;&#x4EE5;&#x4E0B;&#x4E09;&#x79CD;hash map:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    // &#x5E26;&#x4E00;&#x4E2A;std::mutex&#x9501;&#x7684;std::unorderd_map
    class MutexHashMap {
        std::unorderd_map&amp;lt;int, void*&amp;gt; hash_map_;
        std::mutex mutex_;
    }; 
    // (Intel&#xAE; TBB)&#x7684;&#x5E76;&#x53D1;hash map
    using TBBHashMap = tbb::interface5::concurrent_hash_map&amp;lt;int, void*&amp;gt;;
    // Concurrency Kit&#x7684;&#x65E0;&#x9501;hash map
    struct ck_ht_t hash_table_;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&#x786C;&#x4EF6;&#x91C7;&#x7528;Core2&#x53CC;&#x6838;2.4G CPU&#xFF0C;&#x7CFB;&#x7EDF;&#x91C7;&#x7528; OS X 10.9&#xFF0C;
key-value&#x5BF9;&#x91C7;&#x7528;&lt;code&gt;std::pair&amp;lt;int,void*&amp;gt;&lt;/code&gt;&#xFF0C;
&#x4E24;&#x4E2A;&#x7EBF;&#x7A0B;&#x5E76;&#x53D1;&#x5199;4&#x4E07;&#x4E2A;key-value&#x5BF9;&#xFF0C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x67E5;&#x627E;4&#x4E07;&#x6B21;key&#xFF0C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5220;&#x9664;4&#x4E07;&#x4E2A;key-value&#x5BF9;&#xFF0C;
&#x4E09;&#x79CD;&#x5BB9;&#x5668;&#x5206;&#x522B;&#x8017;&#x65F6;&lt;code&gt;671 milliseconds&lt;/code&gt;&#x3001;&lt;code&gt;58 milliseconds&lt;/code&gt;&#x548C;&lt;code&gt;16 milliseconds&lt;/code&gt;&#x3002;
&#x663E;&#x7136;&lt;a href="http://concurrencykit.org/" title="Concurrency Kit"&gt;Concurrency Kit&lt;/a&gt;&#x8981;&#x5FEB;&#x5F88;&#x591A;&#xFF0C;&#x81EA;&#x5DF1;&#x5199;&#x7684;&#x5E26;&#x9501;&#x7684;&lt;code&gt;std::unorderd_map&lt;/code&gt;&#x6162;&#x592A;&#x591A;&#x4E86;&#x3002;&lt;/p&gt;

&lt;h2 id="toc_2"&gt;End&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/henglinli/TheServer/blob/master/TheServer/concurrent_hash_map.hh" title="concurrent hash map"&gt;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&lt;/a&gt;&#x89C1;&#x6211;&#x7684;&lt;a href="https://github.com/henglinli/TheServer" title="the server"&gt;Github/TheServer&lt;/a&gt;&#x3002;&lt;/p&gt;

&lt;hr&gt;
</description>
    </item>
    <item>
      <title>Boost.Asio &#x8FDE;&#x63A5;&#x6C60;&#x7684;&#x8BBE;&#x8BA1;</title>
      <link>https://henglinli.github.io/study/boost-asio-%E8%BF%9E%E6%8E%A5%E6%B1%A0%E7%9A%84%E8%AE%BE%E8%AE%A1</link>
      <pubDate>2013-12-02</pubDate>
      <description>&#x5173;&#x4E8E;&#x8FDE;&#x63A5;&#x6C60;&#x7684;&#x8BBE;&#x8BA1;</description>
    </item>
    <item>
      <title>Botan SRP &#x4F7F;&#x7528;&#x4F8B;&#x5B50;</title>
      <link>https://henglinli.github.io/tutorial/botan-srp-%E4%BD%BF%E7%94%A8%E4%BE%8B%E5%AD%90</link>
      <pubDate>2013-11-21</pubDate>
      <description>Botan SRP sample</description>
    </item>
    <item>
      <title>try tcmalloc</title>
      <link>https://henglinli.github.io/try/try-tcmalloc</link>
      <pubDate>2013-11-07</pubDate>
      <description>&lt;h3 id="toc_0"&gt;Why&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://code.google.com/p/gperftools/" title="gperftools"&gt;TCMalloc&lt;/a&gt;&#x5F88;&#x65E9;&#x5C31;&#x73A9;&#x8FC7;&#x4E86;&#xFF0C;&#x6700;&#x8FD1;&#x9762;&#x8BD5;&#xFF0C;&#x8BA8;&#x8BBA;&#x5230;&#x5173;&#x4E8E;&#x7A0B;&#x5E8F;&#x4F18;&#x5316;&#x7684;&#x95EE;&#x9898;&#xFF0C;
&#x5F53;&#x65F6;&#x88AB;&#x903C;&#x95EE;&#x7B97;&#x6CD5;&#x548C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6211;&#x7684;&#x56DE;&#x7B54;&#x662F;&#xFF1A;&#x7528;&#x5E38;&#x7528;&#x7684;&#x5C31;&#x884C;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x81EA;&#x52A8;&#x4F18;&#x5316;&#x7684;&#xFF0C;
&#x6700;&#x4E3B;&#x8981;&#x7684;&#x662F;&#x51CF;&#x5C11;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x3002;&#x73B0;&#x5728;&#x60F3;&#x6765;&#xFF0C;&#x6700;&#x65E9;&#x5E94;&#x8BE5;&#x8003;&#x8651;&#x7684;&#x662F;&#x4F18;&#x5316;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#xFF0C;
&#x5373;&#x66FF;&#x6362;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x6216;&#x4F7F;&#x7528;&#x5185;&#x5B58;&#x6C60;&#x2014;&#x2014;
&#x4F7F;&#x7528;&lt;a href="https://code.google.com/p/gperftools/" title="gperftools"&gt;TCMlloc&lt;/a&gt;&#x6216;&lt;a href="www.boost.org/libs/pool/%E2%80%8E" title="boost pool"&gt;Boost.Pool&lt;/a&gt;&#x3002;&lt;/p&gt;

&lt;h3 id="toc_1"&gt;How&lt;/h3&gt;

&lt;p&gt;&#x4E00;&#x5F00;&#x59CB;&#x53EA;&#x77E5;&#x9053;&lt;a href="https://code.google.com/p/gperftools/" title="gperftools"&gt;TCMalloc&lt;/a&gt;&#x628A;&#x5185;&#x5B58;&#x5206;&#x914D;&#x7684;&#x4E8B;&#x60C5;&#x7EC6;&#x5316;&#x4E86;&#xFF1A;
&#x5C0F;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x7528;&#x7EBF;&#x7A0B;&#x672C;&#x5730;h&#x7F13;&#x5B58;(thread-local cache);
&#x5927;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x7528;&#x4E3B;&#x7F13;&#x5B58;&#x5806;(central headp)&#x5206;&#x914D;;
&#x5206;&#x914D;&#x7684;&#x5185;&#x5B58;&#x53EF;&#x5728;&#x4E24;&#x8005;&#x76F4;&#x63A5;&#x8F6C;&#x79FB;&#x3002;&#x73B0;&#x5728;&#x624D;&#x77E5;&#x9053;&#x7684;&#x662F;&#x5B83;&#x662F;&#x600E;&#x4E48;&#x66FF;&#x4EE3;&#x7CFB;&#x7EDF;
&#x81EA;&#x5E26;&#x7684;&#x5206;&#x914D;&#x5668;&#x7684;&#xFF1A;&lt;/p&gt;

&lt;p&gt;1, GNU/Linux with glibc 
&#x8BF4;&#x6765;&#x60ED;&#x6127;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x4EE5;&#x4E3A;&lt;a href="http://www.gnu.org/software/libc/manual/html_node/Hooks-for-Malloc.html" title="tls"&gt;malloc hook&lt;/a&gt;&#x5C31;&#x662F;&#x6765;&#x5E72;&#x8FD9;&#x4E8B;&#x7684;&#xFF0C;
&#x4ED4;&#x7EC6;&#x770B;&#x4E86;&#x6587;&#x6863;&#x53D1;&#x73B0;&lt;a href="http://www.gnu.org/software/libc/manual/html_node/Hooks-for-Malloc.html" title="tls"&gt;&#x5B83;&lt;/a&gt;&#x662F;&#x7528;&#x6765;debug&#x7684;&#x3002;
&#x770B;&#x4E86;&lt;a href="https://code.google.com/p/gperftools/source/browse/src/libc_override_gcc_and_weak.h" title="glibc override"&gt;tcmalloc&#x7684;&#x76F8;&#x5173;&#x4EE3;&#x7801;&lt;/a&gt;&#x53D1;&#x73B0;&#x7528;&#x7684;&#x662F;&lt;a href="http://en.wikipedia.org/wiki/Weak_symbol" title="weak symbol"&gt;Weak Symbol&lt;/a&gt;alias&#x3002;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    #define ALIAS(tc_fn) __attribute__ ((alias (#tc_fn)))
    void* __libc_malloc(size_t size) ALIAS(tc_malloc);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2, OS X
OS X&#x4E0D;&#x652F;&#x6301;alias&#xFF0C;Google&#x7ED9;&#x51FA;&#x4E86;&lt;a href="https://code.google.com/p/gperftools/source/browse/src/libc_override_osx.h" title="OS X override"&gt;&#x4E24;&#x79CD;override&#x7684;&#x65B9;&#x6CD5;&lt;/a&gt;:
A, Interposition Array&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    typedef struct interpose_s {
        void *new_func;
        void *orig_func;
    } interpose_t;
    #define MAC_INTERPOSE(newf,oldf) __attribute__((used)) \
        static const interpose_t macinterpose##newf##oldf \
        __attribute__ ((section(&amp;quot;__DATA, __interpose&amp;quot;))) = \
        { (void *) newf, (void *) oldf }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Google&#x4E5F;&#x6307;&#x51FA;&#x4E86;&#x8BE5;&#x65B9;&#x6CD5;&#x5F97;&#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;&lt;code&gt;DYLD_INSERT_LIBRARIES&lt;/code&gt;&#xFF0C;
&#x4E0D;&#x592A;&#x597D;(is not much better), &#x8BA9;&lt;a href="https://github.com/emeryberger/Hoard" title="hoard allocator"&gt;Hoard&lt;/a&gt;&#x60C5;&#x4F55;&#x4EE5;&#x582A;&#x554A;&#xFF01;
&#x987A;&#x4FBF;&#x63D0;&#x4E00;&#x4E0B;&#xFF0C;&#x6709;&#x4E2A;&#x57FA;&#x4E8E;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x66F4;&#x590D;&#x6742;&#x901A;&#x7528;&#x7684;&#x5B9E;&#x73B0;&lt;a href="https://github.com/rentzsch/mach_override" title="mach_override"&gt;mach_override&lt;/a&gt;&#x3002;&lt;/p&gt;

&lt;p&gt;B, &lt;a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man3/malloc_zone_malloc.3.html" title="malloc zone mannual"&gt;Malloc Zone&lt;/a&gt;
Google&#x8BA4;&#x4E3A;Malloc Zone&#x662F;&#x66F4;&#x597D;&#x7684;override&#x3002;
Malloc Zone&#x6709;&#x4E2A;&lt;code&gt;malloc_zone_t&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    typedef struct _malloc_zone_t {
        //&#x4E0B;&#x9762;&#x8FD9;&#x53E5;&#x6CE8;&#x91CA;&#x8BF4;&#x660E;&#x8BE5;&#x7ED3;&#x6784;&#x7684;&#x4F5C;&#x7528;
        //Only zone implementors should depend on the layout of this structure;
        // ...
        void    *(*malloc)(struct _malloc_zone_t *zone, size_t size);
        // ...
        void    (*free)(struct _malloc_zone_t *zone, void *ptr);
        // ...
    } malloc_zone_t;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&#x8FD9;&#x6837;&#x4F7F;&#x7528;&#xFF1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&lt;code&gt;malloc_zone_t&lt;/code&gt;&#xFF0C;&#x6CE8;&#x518C;&#x81EA;&#x5DF1;&#x7684;malloc/free&#x51FD;&#x6570;&#x851F;&#x5230;&lt;code&gt;malloc_zone_t&lt;/code&gt;&#xFF0C;
&#x6CE8;&#x518C;&lt;code&gt;malloc_zone_t&lt;/code&gt;&#x5230;&#x7CFB;&#x7EDF;&#x3002;&lt;/p&gt;

&lt;p&gt;&#x77E5;&#x9053;&#x6765;tc_malloc&#x662F;&#x5982;&#x4F55;override&#x6389;&#x7CFB;&#x7EDF;&#x7684;&#x5206;&#x914D;&#x5668;&#x540E;&#xFF0C;&#x5C31;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x4E0D;&#x66FF;&#x4EE3;&#x4E86;&#x3002;
&#x53EA;&#x8981;&#x628A;&lt;a href="https://code.google.com/p/gperftools/source/browse/src/libc_override.h" title="libc ovvrride"&gt;libc_override.h&lt;/a&gt; &lt;code&gt;#if 0 #endif&lt;/code&gt; &#x6389;&#x5C31;OK&#x4E86;&#x3002;
&#x8FD9;&#x6837;&#x81EA;&#x5DF1;&#x7684;&#x7A0B;&#x5E8F;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8C03;&#x7528;TCMalloc&#x4E86;&#x3002;&lt;/p&gt;

&lt;p&gt;&#x8FD8;&#x6709;&#x4E2A;&#x7591;&#x95EE;&#x5C31;&#x662F;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;Google&#x4E0D;&#x8BA9;&#x7528;&#x6237;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x7684;TCMalloc&#xFF0C;&#x800C;&#x662F;override&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x7684;&#x5206;&#x914D;&#x5668;&#xFF1F;&lt;/p&gt;

&lt;h3 id="toc_2"&gt;Then&lt;/h3&gt;

&lt;p&gt;&#x6211;&#x5199;&#x4E86;&#x4E9B;&#x4EE3;&#x7801;&#xFF08;&#x5355;&#x7EBF;&#x7A0B;&#xFF09;&#x6D4B;&#x8BD5;&#x4E86;TCMalloc Hoard&#x548C;&#x7CFB;&#x7EDF;&#x81EA;&#x5E26;&#x7684;&#x5206;&#x914D;&#x5668;&#x6BD4;&#x8F83;&#x3002;
&#x7ED3;&#x679C;&#x662F;&#xFF1A;&#x5728;GNU/Linux&#x5E73;&#x53F0;(&#x6211;&#x7528;&#x7684;&#x662F;ArchLinux&#xFF09;TCMalloc&#x548C;Hoard&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x5F53;&#x7136;&#x90FD;&#x6BD4;&#x7CFB;&#x7EDF;&#x7684;&#x597D;&#xFF1B;
&#x800C;OS X&#x4E0A;&#x5374;&#x53D1;&#x73B0;&#x7CFB;&#x7EDF;&#x81EA;&#x5E26;&#x7684;&#x6BD4;&#x4E24;&#x8005;&#x90FD;&#x597D;&#xFF0C;&#x800C;&#x4E14;TCMalloc&#x6839;&#x672C;&#x81EA;&#x6D4B;&#x90FD;&#x901A;&#x4E0D;&#x8FC7;&#x3002;
&#x6700;&#x540E;&#x6211;&#x53D1;&#x73B0;Apple&#x516C;&#x5E03;OS X 10.9&#x7684;&#x5F00;&#x6E90;&#x4EE3;&#x7801;&#x4E2D;&#x6CA1;&#x6709;Malloc&#x7684;&#x5B9E;&#x73B0;&#x4E86;&#xFF0C;
&#x4E5F;&#x8BB8;&#x4ED6;&#x4EEC;&#x6709;&#x6BD4;TCMalloc&#x66F4;&#x597D;&#x7684;&#x5B9E;&#x73B0;&#x5427;&#x3002;&lt;/p&gt;

&lt;h3 id="toc_3"&gt;End&lt;/h3&gt;

&lt;p&gt;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x4ECA;&#x540E;&#x518D;&#x7ED9;&#x51FA;&#xFF0C;&#x5E94;&#x4E3A;&#x6211;&#x60F3;&#x628A;TCMalloc&#x4ECE;gperftools&#x4E2D;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;
&#x4E0D;&#x559C;&#x6B22;&#x8001;&#x7684;autoconf&#xFF0C;&#x60F3;&#x6362;&#x6210;Cmake&#x3002;
&#x5410;&#x69FD;&#xFF1A;OS X&#x4E0A;&#x7F16;&#x8BD1;TCMalloc&#x597D;&#x591A;&#x8B66;&#x544A;&#xFF0C;&#x4ED6;&#x4EEC;&#x8FD8;&#x5728;&#x7528;brk/sbrk......&lt;/p&gt;

&lt;hr&gt;
</description>
    </item>
    <item>
      <title>Try OS X static link</title>
      <link>https://henglinli.github.io/try/try-os-x-static-link</link>
      <pubDate>2013-08-21</pubDate>
      <description>&lt;h3 id="toc_0"&gt;&#x5F00;&#x59CB;&lt;/h3&gt;

&lt;p&gt;&#x7531;&#x4E8E;clang&#x9ED8;&#x8BA4;&#x7684;c++&#x6807;&#x51C6;&#x5E93;&#x8FD8;&#x662F;libstdc++,&#x6211;&#x5C31;&#x60F3;&#x88C5;gcc-4.8,&#x9664;&#x4E86;&#x7F51;&#x7EDC;&#x95EE;&#x9898;&#x5916;&#x8FD8;&#x7B97;&#x987A;&#x5229;&#xFF1A;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew tap homebrew/versions
brew install gcc48
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&#x5149;&#x662F;&#x7F16;&#x8BD1;gcc&#x5C3D;&#x7136;&#x8017;&#x65F6;47&#x5206;&#x949F;&#xFF01;&#x5B89;&#x88C5;&#x4E4B;&#x540E;&#x6D4B;&#x8BD5;&#x4E0B;&#xFF1A;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int main() { return 0; } // empty.cc
gcc-4.8 empty.cc // OK
gcc-4.8 empty.cc -static // ld: library not found for -lcrt0.o
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&#x627E;&#x4E0D;&#x5230;crt0.o, &#x90A3;&#x5C3C;&#xFF1F;&lt;/p&gt;

&lt;h3 id="toc_1"&gt;&#x7EE7;&#x7EED;&lt;/h3&gt;

&lt;p&gt;&#x5728;/usr/lib/&#x548C;Xcode&#x7684;SDK&#x4E2D;&#x90FD;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x5B83;&#xFF0C;&#x4E8E;&#x662F;google&#x4E86;&#x4E00;&#x4E0B;&#x53D1;&#x73B0;&#x4E86;&lt;a href="https://developer.apple.com/library/mac/qa/qa1118/_index.html" title="qa crt0.o"&gt;Apple&#x7684;Technical Q&amp;amp;A QA1118&lt;/a&gt;,&#x5B83;&#x8FD8;&#x8BF4;&#x6559;&#x4E86;&#x4E00;&#x756A;&#xFF0C;&#x7136;&#x540E;&#x8BF4;&#x4E0D;&#x652F;&#x6301;&#x9759;&#x6001;&#x94FE;&#x63A5;(Apple does not support statically linked binaries on Mac OS X.), &#x4F46;&#x662F;&#x5B83;&#x7ED9;&#x51FA;&#x4E86;&#x65B9;&#x5411;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7F16;&#x8BD1;&lt;em&gt;Csu (C starup)&lt;/em&gt;&#x3002;&#x4E0B;&#x8F7D; &lt;a href="http://www.opensource.apple.com/tarballs/Csu/Csu-79.tar.gz"&gt;http://www.opensource.apple.com/tarballs/Csu/Csu-79.tar.gz&lt;/a&gt; &#x5E76;&#x4E14;&#x7F16;&#x8BD1;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd Csu-79
make // &#x7F16;&#x8BD1;
cp crt0.o /usr/local/lib //&#x62F7;&#x8D1D;&#x5230;local
...
gcc-4.8 empty.cc -static
//undefined symbols for architecture x86_64:
//  &amp;quot;_exit&amp;quot;, referenced from:
//     start in crt0.o
//&#x73B0;&#x5728;&#x53EA;&#x5DEE;&#x4E00;&#x4E2A;_exit&#x4E86;&#x6CA1;&#x6CD5;&#x94FE;&#x63A5;&#x4E86;&#x3002;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="toc_2"&gt;&#x7EE7;&#x7EED;&lt;/h3&gt;

&lt;p&gt;man&#x4E86;&#x4E00;&#x4E0B;&lt;em&gt;exit&#x53D1;&#x73B0;&#x4ED6;&#x662F;&#x5728;unistd.h&#x4E2D;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5B83;&#x5728;C&#x5E93;&#x4E2D;&#xFF0C;&#x987A;&#x5E26;&#x63D0;&#x4E00;&#x4E0B;OS X&#x7684;C&#x5E93;&#x5305;&#x542B;&#x5728;System&#x5E93;&#x4E2D;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x5C31;&#x51B3;&#x5B9A;&#x81EA;&#x5DF1;&#x7F16;&#x8BD1;libC&#x3002;&#x4E0B;&#x8F7D; &lt;a href="http://www.opensource.apple.com/tarballs/Libc/Libc-825.26.tar.gz"&gt;http://www.opensource.apple.com/tarballs/Libc/Libc-825.26.tar.gz&lt;/a&gt; &#x5E76;&#x4E14;&#x7F16;&#x8BD1;&#x3002;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;Xcode&#x7684;project&#xFF0C;&#x672C;&#x4EE5;&#x4E3A;&#x4F1A;&#x975E;&#x5E38;&#x987A;&#x5229;&#xFF0C;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;libC&#x641E;&#x4E86;&#x6211;&#x534A;&#x5929;&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x95EE;&#x9898;&#x5728;&#x4E8E;libC&#x9700;&#x8981;System Framwork &#x7684; PrivateHeaders&#xFF0C;&#x4F46;&#x662F;SDK&#x548C;&#x7CFB;&#x7EDF;&#x90FD;&#x4E0D;&#x63D0;&#x4F9B;&#xFF0C;&#x6211;&#x4E8E;&#x662F;&#x8FD8;&#x5F97;&#x4ECE;xnu&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x4E2D;&#x63D0;&#x53D6;&#x4E86;&#x51E0;&#x4E2A;&#x9700;&#x8981;&#x7684;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x8FD8;&#x5F97;&#x5C0F;&#x5C0F;&#x4FEE;&#x6539;&#x6E90;&#x4EE3;&#x7801;&#xFF08;&#x4E3B;&#x8981;&#x662F;&#x4E00;&#x4E0B;&#x5B8F;&#xFF09;&#xFF0C;&#x6700;&#x540E;&#x7EC8;&#x4E8E;&#x5F97;&#x5230;&#x4E86;libc.a&#x548C;libc&lt;/em&gt;debug.a&#xFF0C;&#x8BD5;&#x8BD5;&#x770B;&#xFF1A;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcc-4.8 empty.cc -static /usr/local/lib/libc.a
//Undefined symbols for architecture x86_64:
//&amp;quot;__Block_copy&amp;quot;, referenced from:
//_atexit_b in libc.a(atexit.o)
//&amp;quot;___assert_rtn&amp;quot;, referenced from:
//_pthread_create in libc.a(pthread.o)
//_pthread_create_suspended_np in libc.a(pthread.o)
//...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&#x94FE;&#x63A5;&#x9519;&#x8BEF;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x548C;pthread&#x7684;&#x94FE;&#x63A5;&#x4F9D;&#x8D56;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;libSystem&#x7684;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x4E5F;&#x5F97;&#x7F16;&#x8BD1;&#x51FA;&#x6765;&#xFF0C;&#x8981;&#x4FEE;&#x6539;&#x7684;&#x592A;&#x591A;&#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x6211;&#x7F16;&#x8BD1;libc&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x53BB;&#x6389;&#x4E86;&#x4E00;&#x4E2A;dispatch&#x76F8;&#x5173;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x3002;&lt;/p&gt;

&lt;h3 id="toc_3"&gt;&#x653E;&#x5F03;&lt;/h3&gt;

&lt;p&gt;&#x5982;&#x679C;&#x7EE7;&#x7EED;&#x4E0B;&#x53BB;&#xFF0C;&#x4FEE;&#x6539;&#x4E0B;libC&#x7684;project&#xFF08;&#x5B83;&#x9ED8;&#x8BA4;&#x7F16;&#x8BD1;&#x51FA;libSystem.dylib)&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x5B83;&#x8FD0;&#x884C;&#x7A33;&#x5B9A;&#x554A;&#xFF0C;&#x4E8E;&#x662F;&#x5F97;&#x51FA;&#x7ED3;&#x8BBA;&#xFF1A;OS X&#x4E0D;&#x652F;&#x6301;&#x52A8;&#x6001;&#x94FE;&#x63A5;&#xFF01;&lt;/p&gt;

&lt;hr&gt;
</description>
    </item>
  </channel>
</rss>
